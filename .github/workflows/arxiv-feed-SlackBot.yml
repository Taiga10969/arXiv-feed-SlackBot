# ArXiv論文通知ボットのGitHub Actionsワークフロー
# 毎日JST 09:00（UTC 00:00）に実行され、新しいCV論文をSlackに通知
name: arXiv-feed SlackBot

# ワークフローの実行トリガー
on:
  schedule:
    # cron形式: 毎日UTC 00:00（日本時間09:00）に実行
    - cron: "0 0 * * *"      # UTC 00:00 = JST 09:00
  workflow_dispatch:          # 手動実行も可能

# 必要な権限設定
permissions:
  contents: write            # seenファイルをコミット保存する場合に必要

# 実行するジョブの定義
jobs:
  # arxiv-feed-SlackBotに関連する論文通知のジョブ
  arxiv-feed-SlackBot:
    runs-on: ubuntu-latest   # Ubuntu最新版で実行
    steps:
      # ステップ1: リポジトリのチェックアウト
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0     # push のために履歴が必要（全履歴を取得）

      # ステップ2: Python環境のセットアップ
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # Python 3.11を使用

      # ステップ3: 依存関係のインストール
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # 翻訳機能の依存関係をインストール（翻訳が無効な場合でも問題なし）
          pip install google-cloud-translate

      # ステップ4: GCP認証のセットアップ
      # 翻訳機能の使用有無に関わらず設定（翻訳が無効な場合は自動的にスキップされる）
      - name: Setup Google credentials
        env:
          GOOGLE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}
        run: |
          echo "$GOOGLE_CREDENTIALS_BASE64" | base64 -d > $GITHUB_WORKSPACE/credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/credentials.json" >> $GITHUB_ENV

      # ステップ5: arxiv-feed-SlackBotボットの実行
      - name: Run arxiv-feed-SlackBot bot
        env:
          # Slack Webhook URLを環境変数として設定
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # 設定ファイルを指定してメインスクリプトを実行
          python src/main.py --config configs/arxiv-feed-SlackBot.yaml

      # ステップ6: 既読ファイルの永続化（推奨）
      # 処理済みの論文IDを保存して、重複通知を防ぐ
      - name: Persist seen file
        run: |
          # data/ディレクトリに変更があるかチェック
          if [ -n "$(git status --porcelain data/)" ]; then
            # 変更がある場合、GitHub Actions用のユーザー設定
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            # 変更されたファイルをステージングしてコミット
            git add data/
            git commit -m "chore(arxiv-feed-SlackBot): update seen ids [skip ci]"
            # リポジトリにプッシュ
            git push
          else
            # 変更がない場合は何もしない
            echo "No changes in data/; nothing to commit."
          fi
